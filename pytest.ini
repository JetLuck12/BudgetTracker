[tool:pytest]
# Конфигурация pytest для Budget Tracker

# Директории для поиска тестов
testpaths = tests

# Паттерны для поиска тестовых файлов
python_files = test_*.py

# Паттерны для поиска тестовых классов
python_classes = Test*

# Паттерны для поиска тестовых функций
python_functions = test_*

# Минимальная версия Python
minversion = 3.8

# Добавляем пути для импорта
addopts = 
    -v
    --tb=short
    --strict-markers
    --disable-warnings
    --color=yes

# Маркеры для категоризации тестов
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    api: marks tests as API tests
    core: marks tests as core logic tests

# Фильтры предупреждений
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:pandas.*

# Настройки для покрытия кода (если установлен pytest-cov)
# addopts = --cov=src --cov-report=html --cov-report=term-missing

# Настройки для параллельного выполнения (если установлен pytest-xdist)
# addopts = -n auto

# Настройки для профилирования (если установлен pytest-profiling)
# addopts = --profile

# Настройки для отчетов (если установлен pytest-html)
# addopts = --html=reports/report.html --self-contained-html

# Настройки для логирования
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Настройки для файлов логов
log_file = tests/logs/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d %(funcName)s(): %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Настройки для временных файлов
tmp_path = tests/tmp

# Настройки для кэша
cache_dir = tests/.pytest_cache
